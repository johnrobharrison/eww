(include "./sway_widget.yuck")

;; brightness
(defpoll BACKLIGHT 
  :interval "5s" 
  `light -G`)


;; bar config
(defwidget bar []
  (box 
    :class "eww-bar"
    :space-evenly false 
    (box 
      :space-evenly false 
      :halign "start"
      :hexpand true
      (left_eDP-1)
      (title)
    )
    (settings)
  )
)


;; window title
(defpoll TITLE :interval "50ms" `scripts/title`)
(defwidget title []
 (box 
    :vexpand true
    (box 
      (label 
        :class "active-window" 
        :text TITLE
      )
    )
  )
)

;; cpu temp
(defpoll CPUTEMP 
  :interval "5s" 
  `scripts/temps --cpu`)
(defwidget cputemp [] 
 (box 
    (eventbox
      :onhover "/home/shin/.config/eww/temps/launch-temps.sh"
      :onhoverlost "/home/shin/.config/eww/temps/launch-temps.sh"
      (label 
        :class "temps" 
        :text "${CPUTEMP}°"
      )
    )
  )
)


;; battery
(defpoll BATPERC 
  :interval "10s" 
  `scripts/battery/battery-percent`)

(defpoll BATCHARGE 
  :interval "3s" 
  `scripts/battery/is-charging`)

(defpoll BATTIMEREMAIN 
  :interval "5s" 
  `scripts/battery/time-remaining`)

(defpoll BATCLASS 
  :interval "10s" 
  `scripts/battery/battery-class`)


(defwidget battery []
  (box 
    :class { 
        (BATPERC > 97 ? "battery-bar-full" : "battery-bar" )
    }
    :spacing 0
    :tooltip "battery ${BATPERC}% ${BATTIMEREMAIN}"
    (label 
      :halign "end"
      :class { BATCHARGE == "Discharging" ? "not-charging" : "charging"}
      :text "${ BATCHARGE == "Discharging" ? '' : '⚡'}"
    )
    (scale
      :min 0
      :max 100
      :value BATPERC
    )
    (label
      :text BATPERC
    )
  )
)




;; clock
(defpoll time :interval "10s" "date '+ %Y-%m-%d  %H:%M'")
(defwidget clock []
  (box 
    :class "clock" 
    time
  )
)


;; settings
(defpoll SETTINGSOPEN 
  :interval "1s" 
  `settings/settings-opened`)

(defwidget settings [] 
  (box 
    :class "settings"
    :halign "end"
    (box 
      :spacing 10
      :space-evenly "false" 

      ;; battery
      (battery)

      ;; cpu temp
      (cputemp)

      ;; vm
      (vms)
      
      ;; clock
      (button
        :class "settings-button"
        :onclick '/home/shin/.config/eww/settings/launch-settings.sh'
        (clock)
      )
    )
  )
)



;; vm
(defpoll VMOPEN 
  :interval "1s" 
  `scripts/vm-running`)

(defwidget vms [] 
  (box 
    :class "vms"
    :onclick '/home/shin/.config/eww/settings/launch-settings.sh'
    (vm)
  )
)

(defwidget vm []
  (box 
    :class {
      VMOPEN ? "vm-open": "vm-closed"
    }
  )
)












;; containing window
(defwindow main_bar_eDP-1
  :monitor 0
  :exclusive true
  :windowtype "dock"
	:focusable false
  :geometry (geometry 
    :x "0%"
    :y "0%"
    :width "100%"
    :anchor "top center")
  (bar))


  